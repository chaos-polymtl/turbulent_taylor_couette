# SPDX-FileCopyrightText: Copyright (c) 2025 The Lethe Authors
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception OR LGPL-2.1-or-later

# Listing of Parameters
#----------------------

set dimension = 3

#---------------------------------------------------
# Simulation Control
#---------------------------------------------------

subsection simulation control
  set method         = bdf2
  set output name    = taylor_couette
  set output path    = ./output/
  set time end       = 33.5
  set time step      = 0.0125
  set adapt          = true
  set max cfl        = 1
  set subdivision    = 3
  set output control = time
  set output times   = 22.058, 24.016, 27.2, 33.5
  set group files    = 10
end

#---------------------------------------------------
# Timer
#---------------------------------------------------

subsection timer
  set type = iteration # <none|iteration|end>
end

#---------------------------------------------------
# Restart
#---------------------------------------------------

subsection restart
  set restart    = true
  set checkpoint = true
  set frequency  = 100
  set filename   = tc_restart
end

#------------------------ ---------------------------
# Physical Properties
#---------------------------------------------------

subsection physical properties
  subsection fluid 0
    set kinematic viscosity = 6.25e-05
  end
end

#---------------------------------------------------
# Initial conditions
#---------------------------------------------------

subsection initial conditions
  set type = nodal
  subsection uvwp
    # A= -(kappa * kappa) / (1. - kappa * kappa);
    # B= ri * ri / (1. - kappa * kappa);
    set Function constants  = epsilon=0.1, ri=0.5, omega=1.0, d=0.5 , A= -0.3333333333333333, B= 0.3333333333333333
    set Function expression = cos(atan2(y,x))*(epsilon*omega*ri*cos(atan2(y,x))*sin(((sqrt(x*x+y*y)-ri)*pi)/ri)*sin(z/d)) - sin(atan2(y,x))*(A*(sqrt(x*x+y*y)) + B/(sqrt(x*x+y*y)) + epsilon*omega*ri*sin(atan2(y,x))*sin(((sqrt(x*x+y*y)-ri)*pi)/ri)*sin(z/d)); sin(atan2(y,x))*(epsilon*omega*ri*cos(atan2(y,x))*sin(((sqrt(x*x+y*y)-ri)*pi)/ri)*sin(z/d)) + cos(atan2(y,x))*(A*(sqrt(x*x+y*y)) + B/(sqrt(x*x+y*y)) + epsilon*omega*ri*sin(atan2(y,x))*sin(((sqrt(x*x+y*y)-ri)*pi)/ri)*sin(z/d)); 0.0; ((0.5*A*A*(x*x+y*y)) + (2*A*B*ln(sqrt(x*x+y*y)))) - (0.5*B*B/(x*x+y*y)) + (0.5*(epsilon*omega*ri)*(epsilon*omega*ri)*cos(2*atan2(y,x))*sin((2*(sqrt(x*x+y*y)-ri)*pi)/ri)*sin(2*z/d))
  end
end

#---------------------------------------------------
# Mesh
#---------------------------------------------------

subsection mesh
  set type                        = dealii
  set grid type                   = cylinder_shell
  set grid arguments              = 3.14159265359 : 0.5 : 1.0 : 5 : 4 : true
  set initial refinement          = 6
  set initial boundary refinement = 1
  set boundaries refined          = 0, 1
end

#---------------------------------------------------
# FEM
#---------------------------------------------------

subsection FEM
  set velocity order = 3
  set pressure order = 3
end

#---------------------------------------------------
# Source term
#---------------------------------------------------

subsection source term
  subsection fluid dynamics
    set enable = false
  end
end

#---------------------------------------------------
# Forces
#---------------------------------------------------

subsection forces
  set calculate torque = true
end

#---------------------------------------------------
# Post-Processing
#---------------------------------------------------

subsection post-processing
  set calculate enstrophy           = true
  set calculate kinetic energy      = true
  set calculate pressure power      = true
  set calculate viscous dissipation = true
  set calculate average velocities  = true
end

#---------------------------------------------------
# Boundary Conditions
#---------------------------------------------------

subsection boundary conditions
  set number                = 3
  set fix pressure constant = true
  subsection bc 0
    set type = function
    subsection u
      set Function expression = -y
    end
    subsection v
      set Function expression = x
    end
    subsection w
      set Function expression = 0
    end
  end
  subsection bc 1
    set type = noslip
  end
  subsection bc 2
    set type               = periodic
    set id                 = 2
    set periodic_id        = 3
    set periodic_direction = 2
  end
end

#---------------------------------------------------
# Non-Linear Solver Control
#---------------------------------------------------

subsection non-linear solver
  subsection fluid dynamics
    set tolerance            = 1e-5
    set verbosity            = verbose
    set reuse preconditioner = true
  end
end

#---------------------------------------------------
# Linear Solver Control
#---------------------------------------------------

subsection linear solver
  subsection fluid dynamics
    set method             = gmres
    set max iters          = 100
    set relative residual  = 1e-4
    set minimum residual   = 1e-7
    set max krylov vectors = 200
    set verbosity          = extra verbose
    set preconditioner     = gcmg

    # MG parameters
    set mg verbosity                   = verbose
    set mg enable hessians in jacobian = false

    # Smoother
    set mg smoother iterations          = 5
    set mg smoother eig estimation      = true
    set mg smoother preconditioner type = inverse diagonal

    # Eigenvalue estimation parameters
    set eig estimation smoothing range = 5
    set eig estimation cg n iterations = 20
    set eig estimation verbosity       = quiet

    #coarse-grid solver
    set mg coarse grid solver = direct
  end
end
